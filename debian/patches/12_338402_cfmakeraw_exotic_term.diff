Fix cfmakeraw() to not disable XON/XOFF flow control.  Based on upstream
commit bd67e69bcdbcd7a68fbdf7e48da80daa47a679d9 for #338402

diff --git a/src/osdep/osdep.c b/src/osdep/osdep.c
index 9e1af28..01e8760 100644
--- a/src/osdep/osdep.c
+++ b/src/osdep/osdep.c
@@ -751,7 +751,21 @@ elinks_cfmakeraw(struct termios *t)
 	t->c_cc[VMIN] = 1; /* cfmakeraw() is broken on AIX --mikulas */
 #endif
 #else
-	t->c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL|IXON);
+ 	/* This elinks_cfmakeraw() intentionally leaves the following
+ 	 * settings unchanged, even though the standard cfmakeraw()
+ 	 * would change some of them:
+ 	 *
+ 	 * - c_cflag & CSIZE: number of bits per character.
+ 	 *   Bug 54 asked ELinks not to change this.
+ 	 * - c_cflag & (PARENB | PARODD): parity bit in characters.
+ 	 *   Bug 54 asked ELinks not to change this.
+ 	 * - c_iflag & (IXON | IXOFF | IXANY): XON/XOFF flow control.
+ 	 *
+ 	 * The reasoning is, if the user has set up unusual values for
+ 	 * those settings before starting ELinks, then the terminal
+ 	 * probably expects those values and ELinks should not mess
+ 	 * with them.  */
+ 	t->c_iflag &= ~(IGNBRK|BRKINT|PARMRK|ISTRIP|INLCR|IGNCR|ICRNL);
 	t->c_oflag &= ~OPOST;
 	t->c_lflag &= ~(ECHO|ECHONL|ICANON|ISIG|IEXTEN);
 	t->c_cflag &= ~(CSIZE|PARENB);
