Handle and support CSS display:none, based on upstream commit
670d13728a51caedf44ea9fbed35751614111653 for #303164

diff --git a/src/document/css/apply.c b/src/document/css/apply.c
index 0397bb3..6d9ce01 100644
--- a/src/document/css/apply.c
+++ b/src/document/css/apply.c
@@ -76,6 +76,10 @@ css_apply_display(struct html_context *html_context, struct html_element *elemen
 			 * YMMV. */
 			element->linebreak = 2;
 			break;
+		case CSS_DISP_NONE:
+			if (html_context->options->css_ignore_display_none)
+				element->invisible = 1;
+			break;
 		default:
 			INTERNAL("Bad prop->value.display %d", prop->value.display);
 			break;
diff --git a/src/document/css/css.c b/src/document/css/css.c
index 42c9ef3..0ddc018 100644
--- a/src/document/css/css.c
+++ b/src/document/css/css.c
@@ -33,6 +33,13 @@ struct option_info css_options_info[] = {
 		"enable", 0, 1,
 		N_("Enable adding of CSS style info to documents.")),
 
+	INIT_OPT_BOOL("document.css", N_("Ignore \"display: none\""),
+		"ignore_display_none", 0, 1,
+		N_("When enabled, elements are rendered, even when their display\n"
+		"property has the value \"none\". Because ELinks's CSS support is\n"
+		"still very incomplete, this setting can improve the way that some\n"
+		"documents are rendered.")),
+
 	INIT_OPT_BOOL("document.css", N_("Import external style sheets"),
 		"import", 0, 1,
 		N_("When enabled any external style sheets that are imported from\n"
diff --git a/src/document/css/property.h b/src/document/css/property.h
index 0801026..8b3c69d 100644
--- a/src/document/css/property.h
+++ b/src/document/css/property.h
@@ -47,6 +47,7 @@ struct css_property {
 		enum css_display {
 			CSS_DISP_INLINE,
 			CSS_DISP_BLOCK,
+			CSS_DISP_NONE,
 		} display;
 		struct {
 			enum format_attr add, rem;
diff --git a/src/document/css/value.c b/src/document/css/value.c
index 270694c..074c1f2 100644
--- a/src/document/css/value.c
+++ b/src/document/css/value.c
@@ -300,6 +300,8 @@ css_parse_display_value(struct css_property_info *propinfo,
 		value->display = CSS_DISP_INLINE; /* XXX */
 	} else if (scanner_token_contains(token, "block")) {
 		value->display = CSS_DISP_BLOCK;
+	} else if (scanner_token_contains(token, "none")) {
+		value->display = CSS_DISP_NONE;
 	} else {
 		return 0;
 	}
diff --git a/src/document/options.c b/src/document/options.c
index 1d2d81c..1f5c2b1 100644
--- a/src/document/options.c
+++ b/src/document/options.c
@@ -57,6 +57,7 @@ init_document_options(struct document_options *doo)
 	/* Boolean options. */
 #ifdef CONFIG_CSS
 	doo->css_enable = get_opt_bool("document.css.enable");
+	doo->css_ignore_display_none = get_opt_bool("document.css.ignore_display_none");
 	doo->css_import = get_opt_bool("document.css.import");
 #endif
 
diff --git a/src/document/options.h b/src/document/options.h
index a540fd7..2e23c65 100644
--- a/src/document/options.h
+++ b/src/document/options.h
@@ -47,6 +47,7 @@ struct document_options {
 	/* CSS stuff */
 	unsigned int css_enable:1;
 	unsigned int css_import:1;
+	unsigned int css_ignore_display_none:1;
 #endif
 
 	/* HTML stuff */
